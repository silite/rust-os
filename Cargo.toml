[package]
name = "rust-os"
version = "0.1.0"
edition = "2021"

# 当panic发生时Rust会使用展开来析构那些活跃在栈上的变量。这会确保所有使用的内存都会被释放，并允许父进程捕获panic，处理并继续运行。
# Disabled Unwinding, panic时终止，可以阻止操作系统默认展开栈
# "panic-strategy": "abort" in x86_64-*.json
# [profile.dev]
# panic = "abort"
# [profile.release]
# panic = "abort"

[dependencies]
bootloader = "0.9.8"
# https://en.wikipedia.org/wiki/Volatile_(computer_programming)
volatile = "0.2.6"
# 自旋锁
spin = "0.5.2"
x86_64 = "0.14.2"

[dependencies.lazy_static]
# 不连接标准库
version = "1.0"
features = ["spin_no_std"]

[package.metadata.bootimage]
test-args = ["-device", "isa-debug-exit,iobase=0xf4,iosize=0x04"]
test-success-exit-code = 33                                       # (0x10 << 1) | 1

# cargo build --target thumbv7em-none-eabihfversion = "1.0"

# # Linux
# cargo rustc -- -C link-arg=-nostartfiles
# # Windows
# cargo rustc -- -C link-args="/ENTRY:_start /SUBSYSTEM:console"
# # macOS
# cargo rustc -- -C link-args="-e __start -static -nostartfiles"
